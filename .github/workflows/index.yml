name: Monorepo template dependencies

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable

  prepack:
    name: Prepack
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Prepack
        run: yarn run prepack
      - name: Upload builds
        uses: actions/upload-artifact@v2
        with:
          name: prepack
          path: packages/*/dist

  prepublish:
    name: Prepublish
    needs: prepublish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          name: prepack
          path: ./
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Prepublish
        run: yarn run prepublish
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: prepublish
          path: |
            packages/*/.nyc_output
            packages/*/coverage
            packages/*/cypress/coverage
            packages/*/cypress/screenshots
            packages/*/cypress/videos
            packages/*/jest

github-packages:
    name: GitHub Packages
    if: github.event_name == 'push'
    needs: [prepack, prepublish]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          name: prepack
          path: ./
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          yarn config set npmAuthToken $NPM_AUTH_TOKEN;
          yarn config set \
            npmScopes.${{ github.repository_owner }}.npmPublishRegistry \
            'https://npm.pkg.github.com';
          yarn workspaces foreach --parallel --topological-dev npm publish \
            --tolerate-republish;

  npm:
    name: Publish to NPM
    if: github.event_name == 'push'
    needs: [prepack, prepublish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          name: prepack
          path: ./
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: >
          yarn config set npmAuthToken $NPM_AUTH_TOKEN;
          yarn workspaces foreach --parallel --topological-dev npm publish \
            --tolerate-republish;

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
